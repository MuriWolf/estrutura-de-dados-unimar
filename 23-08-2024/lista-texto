// ALUNOS
#include <stdio.h>

//Exercício 1: Crie uma estrutura chamada Aluno com os seguintes campos : nome
//(até 50 caracteres), idade, matrícula e média.Em seguida, escreva um programa
//que lê os dados de 5 alunos e os armazena em um vetor de estruturas.
//Finalmente, exiba os dados dos alunos na tela.

typedef struct
{
	char nome[50];
	int idade;
	char matricula[30];
	double media;
} Aluno;

int main()
{
	const int qtde_alunos = 5;

	Aluno alunos[qtde_alunos];

	for (int i = 0; i < qtde_alunos; i++)
	{
		printf("\nDigite o nome: ");
		scanf_s("%s", alunos[i].nome, (50 * sizeof(char)));

		printf("Digite a idade: ");
		scanf_s("%d", &alunos[i].idade, sizeof(int));

		printf("Digite a matricula: ");
		scanf_s("%s", alunos[i].matricula, (30 * sizeof(char)));

		printf("Digite a media: ");
		scanf_s("%lf", &alunos[i].media, sizeof(double));
	}

	for (int i = 0; i < qtde_alunos; i++)
	{
		printf("\n\nAluno %d: ", i+1);
		printf("\n%s", alunos->nome);
		printf("\n%d", alunos->idade);
		printf("\n%s", alunos->matricula);
		printf("\n%.1f", alunos->media);
	}

}

// CONTA
#include <stdio.h>
#include <string.h>

typedef struct
{
	char nome[50];
	char numero[50];
	double saldo;
} Conta;

double depositar(double saldo, double valor)
{
	if (valor < 0)
	{
		printf("\nNao foi possivel efetuar o deposito. Digite um valor maior.");
		return saldo;
	}
	saldo += valor;
	printf("\Deposito efetuado. Saldo atual: %.2f", saldo);
	return saldo;
}

double sacar(double saldo, double valor)
{
	if (saldo - valor < 0)
	{
		printf("\nNao foi possivel efetuar o saque. Digite um valor menor.");
		return saldo;
	}
	saldo -= valor;
	printf("\nSaque efetuado. Saldo atual: %.2f", saldo);
	return saldo;
}

int main()
{
	Conta conta;

	strcpy_s(conta.nome, "Leon Kannedy");
	strcpy_s(conta.nome, "0324233134");
	conta.saldo = 1400.24;

	while (1)
	{
		int escolha = 100;
		double valor = 0;

		printf("\nOPCOES\n\n1 - sacar\n2 - depositar\n0 - sair\n\n");
		scanf_s("%d", &escolha);

		if (escolha == 0)
		{
			return 0;
		}

		printf("\nDigite o valor: ");
		scanf_s("%lf", &valor, sizeof(double));

		switch (escolha)
		{
		case 1:
			conta.saldo = sacar(conta.saldo, valor);
			break;
		case 2:
			conta.saldo = depositar(conta.saldo, valor);
			break;
		case 0:
			break;
		default:
			break;
		};
	}
}

// CONTATOS
#include <stdio.h>
#include <string.h>

//• Exercício 3: Crie uma estrutura chamada Contato com os campos : nome(até 50
//	caracteres), telefone(até 15 caracteres) e e - mail(até 50 caracteres).Crie um
//	programa que permita ao usuário armazenar até 10 contatos em um vetor de
//	estruturas, exibir os contatos e procurar um contato pelo nome.
//

typedef struct
{
	char nome[50];
	char telefone[15];
	char email[50];
} Contato;

const int max_contatos = 10;

int buscar_contatos(int qtde_contatos, Contato contatos[qtde_contatos], char nome[50]);

int main()
{
	int qtde_contatos = 0;
	do {
		printf("\nDigite quantos contatos deseja armazenar (até 10): ");
		scanf("%d", &qtde_contatos);
	} while (qtde_contatos < 1 && qtde_contatos > 10);
  
  Contato contatos[qtde_contatos];

	for (int i = 0; i < qtde_contatos; i++)
	{
    printf("\nDigite o nome do contato %d: ", i+1);
    scanf(" %[^\n]s", contatos[i].nome);

    printf("Digite o telefone do contato %d: ", i+1);
    scanf(" %[^\n]s", contatos[i].telefone);
	
    printf("Digite o email do contato %d: ", i+1);
    scanf(" %[^\n]s", contatos[i].email);
  }

  for (int i = 0; i < qtde_contatos; i++)
  {
    printf("\n\nDados do contato %d\n", i+1);
    printf("\nNome: %s", contatos[i].nome);
    printf("\nTelefone: %s", contatos[i].telefone);
    printf("\nEmail: %s\n", contatos[i].email);

  }

  int escolha = 0;

  while (1)
  {
    do
    {
      printf("\nDeseja pesquisar alguem? (1 - sim, 0 - sair): ");
      scanf("%d", &escolha);
    } while (escolha != 1 && escolha != 0);

    if (escolha == 0)
    {
      break;   
    }
    
    char nome[50];
    printf("\nDigite o nome de quem deseja ver: ");
    scanf(" %[^\n]s", nome);
    
    int id = buscar_contatos(qtde_contatos, contatos, nome);

    if (id == -1)
    {
      printf("\nNome nao encontrado");
    }
    else 
    {
      printf("\n\nDados do contato\n");
      printf("\nNome: %s", contatos[id].nome);
      printf("\nTelefone: %s", contatos[id].telefone);
      printf("\nEmail: %s\n", contatos[id].email);
    }
    
  }
  return 0;
}


int buscar_contatos(int qtde_contatos, Contato contatos[qtde_contatos], char nome[50])
{
  for (int i = 0; i < qtde_contatos; i++)
  {
    if (strcmp(contatos[i].nome, nome) == 0)
    {
      return i;
    }
  }
  return -1;
}

